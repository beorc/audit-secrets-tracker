FROM elixir:1.11-alpine as build

ENV HOME=/opt/app TERM=xterm

WORKDIR $HOME

ENV MIX_ENV=prod

ARG release_level
ENV RELEASE_LEVEL=$release_level
ARG release_number
ENV RELEASE_NUMBER=$release_number

ENV HEX_HTTP_CONCURRENCY=1
ENV HEX_HTTP_TIMEOUT=120 

RUN mix local.hex --force && mix local.rebar --force

# Cache elixir deps
COPY mix.lock ./
COPY mix.exs.secrets ./mix.exs
RUN mkdir config
COPY config/* config/
RUN mkdir -p apps/secrets/config \
    mkdir apps/shared_modules
COPY apps/secrets/mix.exs ./apps/secrets/
COPY apps/secrets/config/config.exs ./apps/secrets/config/
COPY apps/secrets/config/prod.exs ./apps/secrets/config/
COPY apps/secrets/config/releases.exs ./config/
COPY apps/shared_modules/mix.exs ./apps/shared_modules/

# hadolint ignore=SC1010
RUN mix do deps.get, deps.compile

COPY apps/secrets/ ./apps/secrets/
RUN rm ./apps/secrets/*.json
COPY apps/shared_modules/ ./apps/shared_modules/

RUN mix release

########################################################################

FROM alpine:20210212

# hadolint ignore=DL3018
RUN apk --no-cache --update add bash postgresql-client aws-cli && \
    rm -rf /var/cache/apk/*

ENV USER=docker
ENV UID=12345
ENV GID=23456

RUN addgroup --gid "$GID" "$USER" \
    && adduser \
    --disabled-password \
    --gecos "" \
    --ingroup "$USER" \
    --uid "$UID" \
    "$USER"

ENV SHELL=/bin/sh

ARG release_level
ENV RELEASE_LEVEL=$release_level
ARG release_number
ENV RELEASE_NUMBER=$release_number

WORKDIR /opt/app

COPY --from=build /opt/app/_build/prod/rel/secrets .

RUN mkdir ./tmp && chown -R $USER /opt/app

USER $USER

ENTRYPOINT ["/opt/app/bin/secrets"]
CMD ["start"]
